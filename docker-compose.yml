version: "3.8"

services:
  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./public:/usr/share/nginx/html:ro   # nếu cần serve static
    depends_on:
      - seno-blackdragon-api
    networks: [app-network]
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  seno-blackdragon-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: seno-blackdragon-api:1.0.0
    container_name: seno-blackdragon-api
    hostname: seno-blackdragon-api
    env_file: [.env]
    # EXPOSE trong Dockerfile nên là 8000
    ports:
      - "8080:8000"           # nếu chỉ dùng qua nginx nội bộ, có thể bỏ dòng này
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks: [app-network]
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    # resources (tuỳ chọn)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1.0"
    #       memory: 512M

  db:
    image: postgres:16.4-alpine
    container_name: seno-blackdragon-db
    restart: unless-stopped
    env_file: [.env]
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    # Dev: mở cổng; Prod: nên bỏ đi để internal only
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./db/init:/docker-entrypoint-initdb.d:ro  # nếu cần init scripts
    networks: [app-network]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7.2-alpine
    container_name: seno-blackdragon-redis
    restart: unless-stopped
    # Prod: không nên publish cổng
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --save 60 1
      --appendonly yes
      --loglevel warning
      --protected-mode no
      # --requirepass ${REDIS_PASSWORD}
    networks: [app-network]
    healthcheck:
      test: ["CMD", "redis-cli -h 127.0.0.1 ping", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
