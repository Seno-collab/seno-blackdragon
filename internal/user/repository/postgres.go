package repository

import (
	"context"
	"database/sql"

	"seno-blackdragon/internal/db"
	"seno-blackdragon/internal/user/model"
)

// Postgres implements UserRepository using queries generated by sqlc.
type Postgres struct {
	queries *db.Queries
}

// NewPostgres returns a repository backed by PostgreSQL.
func NewPostgres(dbConn *sql.DB) *Postgres {
	return &Postgres{queries: db.New(dbConn)}
}

func (r *Postgres) Create(ctx context.Context, u *model.User) error {
	usr, err := r.queries.CreateUser(ctx, u.Name)
	if err != nil {
		return err
	}
	u.ID = usr.ID
	return nil
}

func (r *Postgres) FindByID(ctx context.Context, id int64) (*model.User, error) {
	usr, err := r.queries.GetUserByID(ctx, id)
	if err != nil {
		return nil, err
	}
	return &model.User{ID: usr.ID, Name: usr.Name}, nil
}
